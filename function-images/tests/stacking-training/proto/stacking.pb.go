// MIT License
//
// Copyright (c) 2021 Dmitrii Ustiugov and EASE lab
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: proto/stacking.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// s3, xdt
	Dataset      []byte `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	DatasetS3Key string `protobuf:"bytes,2,opt,name=dataset_s3key,json=datasetS3key,proto3" json:"dataset_s3key,omitempty"`
	ModelConfig  []byte `protobuf:"bytes,3,opt,name=model_config,json=modelConfig,proto3" json:"model_config,omitempty"`
}

func (x *TrainRequest) Reset() {
	*x = TrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainRequest) ProtoMessage() {}

func (x *TrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainRequest.ProtoReflect.Descriptor instead.
func (*TrainRequest) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{0}
}

func (x *TrainRequest) GetDataset() []byte {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *TrainRequest) GetDatasetS3Key() string {
	if x != nil {
		return x.DatasetS3Key
	}
	return ""
}

func (x *TrainRequest) GetModelConfig() []byte {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

type TrainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// s3, xdt
	Model      []byte `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	ModelS3Key string `protobuf:"bytes,2,opt,name=model_s3key,json=modelS3key,proto3" json:"model_s3key,omitempty"`
	// inline
	Pred []byte `protobuf:"bytes,3,opt,name=pred,proto3" json:"pred,omitempty"`
}

func (x *TrainReply) Reset() {
	*x = TrainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainReply) ProtoMessage() {}

func (x *TrainReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainReply.ProtoReflect.Descriptor instead.
func (*TrainReply) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{1}
}

func (x *TrainReply) GetModel() []byte {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *TrainReply) GetModelS3Key() string {
	if x != nil {
		return x.ModelS3Key
	}
	return ""
}

func (x *TrainReply) GetPred() []byte {
	if x != nil {
		return x.Pred
	}
	return nil
}

type ReduceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// s3, xdt
	ModelS3Key []string `protobuf:"bytes,1,rep,name=model_s3key,json=modelS3key,proto3" json:"model_s3key,omitempty"`
	// inline
	Pred [][]byte `protobuf:"bytes,2,rep,name=pred,proto3" json:"pred,omitempty"`
}

func (x *ReduceRequest) Reset() {
	*x = ReduceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceRequest) ProtoMessage() {}

func (x *ReduceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceRequest.ProtoReflect.Descriptor instead.
func (*ReduceRequest) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{2}
}

func (x *ReduceRequest) GetModelS3Key() []string {
	if x != nil {
		return x.ModelS3Key
	}
	return nil
}

func (x *ReduceRequest) GetPred() [][]byte {
	if x != nil {
		return x.Pred
	}
	return nil
}

type ReduceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inline but could be s3, xdt
	Models      []byte `protobuf:"bytes,1,opt,name=models,proto3" json:"models,omitempty"`
	ModelsS3Key string `protobuf:"bytes,2,opt,name=models_s3key,json=modelsS3key,proto3" json:"models_s3key,omitempty"`
	// inline
	MetaFeatures []byte `protobuf:"bytes,3,opt,name=meta_features,json=metaFeatures,proto3" json:"meta_features,omitempty"`
}

func (x *ReduceReply) Reset() {
	*x = ReduceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReduceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReduceReply) ProtoMessage() {}

func (x *ReduceReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReduceReply.ProtoReflect.Descriptor instead.
func (*ReduceReply) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{3}
}

func (x *ReduceReply) GetModels() []byte {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *ReduceReply) GetModelsS3Key() string {
	if x != nil {
		return x.ModelsS3Key
	}
	return ""
}

func (x *ReduceReply) GetMetaFeatures() []byte {
	if x != nil {
		return x.MetaFeatures
	}
	return nil
}

type MetaTrainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// s3, xdt
	Dataset      []byte `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	DatasetS3Key string `protobuf:"bytes,2,opt,name=dataset_s3key,json=datasetS3key,proto3" json:"dataset_s3key,omitempty"`
	// inline but could be s3, xdt
	Models      []byte `protobuf:"bytes,3,opt,name=models,proto3" json:"models,omitempty"`
	ModelsS3Key string `protobuf:"bytes,4,opt,name=models_s3key,json=modelsS3key,proto3" json:"models_s3key,omitempty"`
}

func (x *MetaTrainRequest) Reset() {
	*x = MetaTrainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaTrainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaTrainRequest) ProtoMessage() {}

func (x *MetaTrainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaTrainRequest.ProtoReflect.Descriptor instead.
func (*MetaTrainRequest) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{4}
}

func (x *MetaTrainRequest) GetDataset() []byte {
	if x != nil {
		return x.Dataset
	}
	return nil
}

func (x *MetaTrainRequest) GetDatasetS3Key() string {
	if x != nil {
		return x.DatasetS3Key
	}
	return ""
}

func (x *MetaTrainRequest) GetModels() []byte {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *MetaTrainRequest) GetModelsS3Key() string {
	if x != nil {
		return x.ModelsS3Key
	}
	return ""
}

type MetaTrainReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// s3, xdt
	ModelFull      []byte `protobuf:"bytes,1,opt,name=model_full,json=modelFull,proto3" json:"model_full,omitempty"`
	ModelFullS3Key string `protobuf:"bytes,2,opt,name=model_full_s3key,json=modelFullS3key,proto3" json:"model_full_s3key,omitempty"`
	// inline
	Score    string `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
	MetaPred []byte `protobuf:"bytes,4,opt,name=meta_pred,json=metaPred,proto3" json:"meta_pred,omitempty"`
}

func (x *MetaTrainReply) Reset() {
	*x = MetaTrainReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stacking_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaTrainReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaTrainReply) ProtoMessage() {}

func (x *MetaTrainReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stacking_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaTrainReply.ProtoReflect.Descriptor instead.
func (*MetaTrainReply) Descriptor() ([]byte, []int) {
	return file_proto_stacking_proto_rawDescGZIP(), []int{5}
}

func (x *MetaTrainReply) GetModelFull() []byte {
	if x != nil {
		return x.ModelFull
	}
	return nil
}

func (x *MetaTrainReply) GetModelFullS3Key() string {
	if x != nil {
		return x.ModelFullS3Key
	}
	return ""
}

func (x *MetaTrainReply) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *MetaTrainReply) GetMetaPred() []byte {
	if x != nil {
		return x.MetaPred
	}
	return nil
}

var File_proto_stacking_proto protoreflect.FileDescriptor

var file_proto_stacking_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x22, 0x70, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x22, 0x57, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x72, 0x65, 0x64, 0x22, 0x44, 0x0a, 0x0d, 0x52,
	0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x70, 0x72, 0x65,
	0x64, 0x22, 0x6d, 0x0a, 0x0b, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x5f, 0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x65, 0x74, 0x61, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x22, 0x8c, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x33, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x33, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5f, 0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x22,
	0x8c, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x46, 0x75, 0x6c,
	0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x73, 0x33, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x53, 0x33, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x50, 0x72, 0x65, 0x64, 0x32, 0x42,
	0x0a, 0x07, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x05, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x32, 0x45, 0x0a, 0x07, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x3a, 0x0a,
	0x06, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x52, 0x0a, 0x0b, 0x4d, 0x65, 0x74,
	0x61, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x09, 0x4d, 0x65, 0x74, 0x61,
	0x54, 0x72, 0x61, 0x69, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x3f, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x68, 0x69, 0x76, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x42, 0x08, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a,
	0x1d, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x2d,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_stacking_proto_rawDescOnce sync.Once
	file_proto_stacking_proto_rawDescData = file_proto_stacking_proto_rawDesc
)

func file_proto_stacking_proto_rawDescGZIP() []byte {
	file_proto_stacking_proto_rawDescOnce.Do(func() {
		file_proto_stacking_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_stacking_proto_rawDescData)
	})
	return file_proto_stacking_proto_rawDescData
}

var file_proto_stacking_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_stacking_proto_goTypes = []interface{}{
	(*TrainRequest)(nil),     // 0: stacking.TrainRequest
	(*TrainReply)(nil),       // 1: stacking.TrainReply
	(*ReduceRequest)(nil),    // 2: stacking.ReduceRequest
	(*ReduceReply)(nil),      // 3: stacking.ReduceReply
	(*MetaTrainRequest)(nil), // 4: stacking.MetaTrainRequest
	(*MetaTrainReply)(nil),   // 5: stacking.MetaTrainReply
}
var file_proto_stacking_proto_depIdxs = []int32{
	0, // 0: stacking.Trainer.Train:input_type -> stacking.TrainRequest
	2, // 1: stacking.Reducer.Reduce:input_type -> stacking.ReduceRequest
	4, // 2: stacking.MetaTrainer.MetaTrain:input_type -> stacking.MetaTrainRequest
	1, // 3: stacking.Trainer.Train:output_type -> stacking.TrainReply
	3, // 4: stacking.Reducer.Reduce:output_type -> stacking.ReduceReply
	5, // 5: stacking.MetaTrainer.MetaTrain:output_type -> stacking.MetaTrainReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_stacking_proto_init() }
func file_proto_stacking_proto_init() {
	if File_proto_stacking_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_stacking_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stacking_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stacking_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stacking_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReduceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stacking_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaTrainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stacking_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaTrainReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_stacking_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_stacking_proto_goTypes,
		DependencyIndexes: file_proto_stacking_proto_depIdxs,
		MessageInfos:      file_proto_stacking_proto_msgTypes,
	}.Build()
	File_proto_stacking_proto = out.File
	file_proto_stacking_proto_rawDesc = nil
	file_proto_stacking_proto_goTypes = nil
	file_proto_stacking_proto_depIdxs = nil
}
